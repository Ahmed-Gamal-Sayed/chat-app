generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Gender {
  MALE
  FEMALE
}

enum Role {
  USER
  ADMIN
}

model User {
  id               Int             @id @default(autoincrement())
  fullName         String          @db.VarChar(255)
  username         String          @unique @db.VarChar(255)
  password         String          @db.VarChar(255) // Should be hashed
  gender           Gender
  birthdate        DateTime
  age              Int
  image            String?         @db.VarChar(255)
  phone            String?         @db.VarChar(20)
  city             String          @db.VarChar(100)
  country          String          @db.VarChar(100)
  role             Role            @default(USER)
  status           String?         @db.VarChar(50)
  messagesSent     Message[]       @relation("sentMessages")
  messagesReceived Message[]       @relation("receivedMessages")
  chatGroups       ChatGroupUser[]
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  GroupMessage     GroupMessage[]
}

model Message {
  id         Int      @id @default(autoincrement())
  sender     User     @relation("sentMessages", fields: [senderId], references: [id])
  senderId   Int
  receiver   User     @relation("receivedMessages", fields: [receiverId], references: [id])
  receiverId Int
  text       String?  @db.VarChar(512)
  image      String?  @db.Text
  audio      String?  @db.Text
  video      String?  @db.Text
  createdAt  DateTime @default(now())
}

model ChatGroup {
  id        Int             @id @default(autoincrement())
  name      String          @db.VarChar(255)
  image     String?         @db.VarChar(255)
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  members   ChatGroupUser[]
  messages  GroupMessage[]
}

model ChatGroupUser {
  id       Int       @id @default(autoincrement())
  user     User      @relation(fields: [userId], references: [id])
  userId   Int
  group    ChatGroup @relation(fields: [groupId], references: [id])
  groupId  Int
  role     Role      @default(USER)
  joinedAt DateTime  @default(now())
}

model GroupMessage {
  id        Int       @id @default(autoincrement())
  sender    User      @relation(fields: [senderId], references: [id])
  senderId  Int
  group     ChatGroup @relation(fields: [groupId], references: [id])
  groupId   Int
  text      String?   @db.VarChar(512)
  image     String?   @db.Text
  audio     String?   @db.Text
  video     String?   @db.Text
  createdAt DateTime  @default(now())
}
